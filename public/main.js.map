{"version":3,"sources":["../src/main.es6.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,IAAT;;;AAGJ,EAAE,MAAF,CAAS,WAAT,GAAuB,gGAAvB;;;AAGA,UAAU,WAAV,CAAsB,kBAAtB,CAAyC,OAAzC;;;AAGA,SAAS,OAAT,CAAiB,GAAjB,EAAsB;;AAElB,QAAI,WAAW,CAAC,IAAI,MAAJ,CAAW,QAAX,EAAqB,IAAI,MAAJ,CAAW,SAAX,CAAjC;;;AAFc,QAKd,MAAM,EAAE,MAAF,CAAS,GAAT,CAAa,KAAb,EAAoB,gBAApB,EAAsC,OAAtC,CAA8C,QAA9C,EAAwD,CAAxD,CAAN;;;AALc,QAQd,SAAS,MAAT;;;AARc,QAWd,SAAS,EAAE,MAAF,CAAS,QAAT,EAAmB,MAAnB,EAA2B,KAA3B,CAAiC,GAAjC,CAAT,CAXc;AAYlB,WAAO,UAAP,CAAkB,SAAlB,CAA4B,GAA5B,CAAgC,gBAAhC;;;AAZkB,UAelB,CAAO,IAAP,CAAY,cAAZ,EAA4B,QAA5B;;;AAfkB,UAkBlB,CAAO,EAAP,CAAU,aAAV,EAAyB,UAAS,MAAT,EAAiB;;AAEtC,gBAAQ,GAAR,CAAY,eAAZ,EAFsC;AAGtC,gBAAQ,GAAR,CAAY,MAAZ;;;AAHsC,YAMlC,UAAU,EAAE,MAAF,CAAS,YAAT,GAAwB,UAAxB,CAAmC,MAAnC,EAA2C,KAA3C,CAAiD,GAAjD,CAAV;;;AANkC,eAStC,CAAQ,SAAR,CAAkB,UAAS,KAAT,EAAgB;;AAE9B,gBAAI,UAAU,6BAA2B,MAAM,OAAN,CAAc,UAAd,CAAyB,MAAzB,CAArC,CAF0B;;AAI9B,gBAAI,OAAO,OAAO,MAAM,OAAN,CAAc,UAAd,CAAyB,IAAzB,CAAd,CAJ0B;;AAM9B,gBAAI,kFAEe,qEACK,MAAM,OAAN,CAAc,UAAd,CAAyB,GAAzB,gMAKD,iCAA4B,MAAM,OAAN,CAAc,UAAd,CAAyB,IAAzB,uFAEnB,MAAM,OAAN,CAAc,UAAd,CAAyB,MAAzB,0DACH,8GAXzB,CAN0B;AAoB9B,kBAAM,SAAN,CAAgB,OAAhB,EApB8B;SAAhB,CAAlB,CATsC;;AAgCtC,YAAI,gBAAgB,SAAS,aAAT,CAAuB,iBAAvB,CAAhB,CAhCkC;AAiCtC,sBAAc,KAAd,CAAoB,OAApB,GAA8B,CAA9B,CAjCsC;AAkCtC,mBAAW,YAAW;;AAElB,0BAAc,UAAd,CAAyB,WAAzB,CAAqC,aAArC,EAFkB;SAAX,EAIR,IAJH,EAlCsC;KAAjB,CAAzB,CAlBkB;;AA4DlB,aAAS,MAAT,CAAgB,IAAhB,EAAsB;AAClB,YAAI,WAAW,sBAAX,CADc;AAElB,eAAO,KAAK,OAAL,CAAa,QAAb,EAAuB,UAAS,GAAT,EAAc;AACxC,kCAAmB,gCAAwB,YAA3C,CADwC;SAAd,CAA9B,CAFkB;KAAtB;CA5DJ","file":"main.js","sourcesContent":["var socket = io();\r\n\r\n// mapbox access token\r\nL.mapbox.accessToken = 'pk.eyJ1Ijoic2lkZGhhcnRoMTEiLCJhIjoiY2lteGhmNzg3MDBlN3Z3bTE2cm9qc3UyYiJ9.uRYdzCGK9Z5tJPqLrI-QsQ';\r\n\r\n// get geolocation\r\nnavigator.geolocation.getCurrentPosition(emitLoc);\r\n\r\n// emit geolocation to server\r\nfunction emitLoc(pos) {\r\n\r\n    var location = [pos.coords.latitude, pos.coords.longitude]\r\n\r\n    // draw map (lat - long)\r\n    var map = L.mapbox.map('map', 'mapbox.streets').setView(location, 9);\r\n\r\n    // 100 miles\r\n    var radius = 160934\r\n\r\n    // draw bounding circle\r\n    var circle = L.circle(location, radius).addTo(map)\r\n    circle._container.classList.add(\"overlay-circle\")\r\n\r\n    // emit location coordinates to server for fetching data using twitter api\r\n    socket.emit('locationData', location);\r\n\r\n    // receive tweets\r\n    socket.on('twitterData', function(tweets) {\r\n\r\n        console.log('data received')\r\n        console.log(tweets)\r\n\r\n        // add pins\r\n        var myLayer = L.mapbox.featureLayer().setGeoJSON(tweets).addTo(map);\r\n\r\n        // bind popup to each pin\r\n        myLayer.eachLayer(function(layer) {\r\n\r\n            var profURL = encodeURI(`//twitter.com/${layer.feature.properties.handle}`)\r\n\r\n            var text = urlify(layer.feature.properties.text)\r\n\r\n            var content = `\r\n                <div class=\"left\">\r\n                    <a href=\"${profURL}\" target=\"_blank\">\r\n                        <img src=\"${layer.feature.properties.img}\" alt=\"user-img\" />\r\n                    </a>\r\n                </div>\r\n                <div class=\"right\">\r\n                    <span class='name'>\r\n                        <a href=\"${profURL}\" target=\"_blank\">${layer.feature.properties.name}</a>\r\n                    </span>\r\n                    <span class='handle'>@${layer.feature.properties.handle}</span>\r\n                    <div class='tweet'>${text}</div>\r\n                </div>                                                     \r\n                `;\r\n            layer.bindPopup(content);\r\n        });\r\n\r\n        var loaderWrapper = document.querySelector('.loader-wrapper');\r\n        loaderWrapper.style.opacity = 0;\r\n        setTimeout(function() {\r\n\r\n            loaderWrapper.parentNode.removeChild(loaderWrapper)\r\n\r\n        }, 2100);\r\n\r\n    })\r\n\r\n    function urlify(text) {\r\n        var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n        return text.replace(urlRegex, function(url) {\r\n            return `<a href='${url}' target='_blank'>${url}</a>`;\r\n        })\r\n    }\r\n}\r\n"]}